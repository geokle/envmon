version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  prometheus:
    image: prom/prometheus:v2.33.5
    user: root
    privileged: true
    volumes:
      - /etc/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
      - loki:loki
    depends_on:
      - cadvisor
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.001'
          memory: 100M
        reservations:
          cpus: '0.0001'
          memory: 80M

  node-exporter:
    image: prom/node-exporter:master
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    links:
      - loki:loki
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.001'
          memory: 100M
        reservations:
          cpus: '0.0001'
          memory: 80M

  alertmanager:
    image: prom/alertmanager:v0.12.0
    ports:
      - 9093:9093
    links:
      - loki:loki
    volumes:
      - /etc/alertmanager/:/etc/alertmanager/
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.001'
          memory: 100M
        reservations:
          cpus: '0.0001'
          memory: 80M

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    links:
      - loki:loki
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"
    restart: always
    devices:
      - /dev/kmsg:/dev/kmsg
    privileged: true
    deploy:
      resources:
        limits:
          cpus: '0.001'
          memory: 100M
        reservations:
          cpus: '0.0001'
          memory: 80M

  grafana:
    image: grafana/grafana:master
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    links:
      - loki:loki
    volumes:
      - grafana_data:/var/lib/grafana
      - /etc/grafana/dashboards:/var/lib/grafana/dashboards
      - /etc/grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - config.monitoring
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.001'
          memory: 100M
        reservations:
          cpus: '0.0001'
          memory: 80M

  loki:
    image: grafana/loki:latest
    volumes:
      - /etc/loki/:/etc/loki/
      - /data:/data
      - /wal:/wal
    command: -config.file=/etc/loki/loki-config.yml
    ports:
        - "3100:3100"
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.001'
          memory: 100M
        reservations:
          cpus: '0.0001'
          memory: 80M

  promtail:
    image: grafana/promtail:2.5.0
    links:
      - loki:loki
    volumes:
      - /var/log:/var/log
      - /etc/promtail/:/etc/promtail/
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        mode: non-blocking
        max-buffer-size: 4m
        loki-retries: "3"
    command: -config.file=/etc/promtail/config_promtail.yml
    deploy:
      resources:
        limits:
          cpus: '0.001'
          memory: 100M
        reservations:
          cpus: '0.0001'
          memory: 80M
